function[a0,b0,d0,e0]=CKVTB_set(A)
[r1,r2,B1,B2]=initial(A);A0=[];B0=[];
for i=1:length(A)
  A0=[A0,A(i,i)-r1(i)];B0=[B0,A(i,i)-r2(i)];
end
[A0,B0]=union_closed_intervals(A0,B0);
D0=zeros(1,length(A0));E0=zeros(1,length(B0));
a0=[];b0=[];d0=[];e0=[];
for i=1:length(A)
  [S,Sbar,r1iS,r1iSbar,r1jS,r1jSbar]=parameter(B1,i);
  [S,Sbar,r2iS,r2iSbar,r2jS,r2jSbar]=parameter(B2,i);
  k=1;
  a1=A(i,i)-r1(i)-r1iS(k);b1=A(i,i)-r2(i)+r2iS(k);
  d1=0;e1=0;
    for j=1:length(Sbar{k})
      [a2,b2,d2,e2]=H_ij(A(i,i),A(Sbar{k}(j),Sbar{k}(j)),r1(i),r1(Sbar{k}(j)),r2(i),r2(Sbar{k}(j)),r1iS(k),r1jSbar{k}(j),r1iSbar(k),r1jS{k}(j),r2iS(k),r2jSbar{k}(j),r2iSbar(k),r2jS{k}(j));
      [a1,b1,d1,e1]=union_tagged_interval_clusters(a1,d1,b1,e1,a2,d2,b2,e2);
    end
  for k=2:length(S)
  a2=A(i,i)-r1(i)-r1iS(k);b2=A(i,i)-r2(i)+r2iS(k);
  d2=0;e2=0;
    for j=1:length(Sbar{k})
      [a3,b3,d3,e3]=H_ij(A(i,i),A(Sbar{k}(j),Sbar{k}(j)),r1(i),r1(Sbar{k}(j)),r2(i),r2(Sbar{k}(j)),r1iS(k),r1jSbar{k}(j),r1iSbar(k),r1jS{k}(j),r2iS(k),r2jSbar{k}(j),r2iSbar(k),r2jS{k}(j));
      [a2,b2,d2,e2]=union_tagged_interval_clusters(a2,d2,b2,e2,a3,d3,b3,e3);
    end
  [a1,b1,d1,e1]=intersection_labeled_interval_clusters(a1,d1,b1,e1,a2,d2,b2,e2);
end
[a0,b0,d0,e0]=union_tagged_interval_clusters(a0,d0,b0,e0,a1,d1,b1,e1);
end
[a0,b0,d0,e0]=union_tagged_interval_clusters(a0,d0,b0,e0,A0,D0,B0,E0);
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function[a,b,d,e]=H_ij(a1,b1,g1,g2,g3,g4,m1,m2,m3,m4,n1,n2,n3,n4)
x1=a1-g1;y1=b1-g2;x2=a1-g3;y2=b1-g2;
x3=a1-g1;y3=b1-g4;x4=a1-g3;y4=b1-g4;
c0=[a1,b1];C1=[-inf,min(a1,b1)];C2=[a1,b1];
C3=[b1,a1];C4=[max(a1,b1),inf];
p1=m3*m4;p2=n3*m4;p3=m3*n4;p4=n3*n4;
[A1,B1]=quadraticf(x1,y1,m1,m2,p1,C1);
%H_ij(1)
[A2,B2]=quadraticf(x2,y2,n1,m2,p2,C2);
%H_ij(2)
[A3,B3]=quadraticf(x3,y3,m1,n2,p3,C3);
%H_ij~(2)
[A4,B4]=quadraticf(x4,y4,n1,n2,p4,C4);
%H_ij(3)
if a1==b1
   a=[A1,A4];b=[B1,B4];
else
    if a1>b1
       a=[A1,A3,A4];b=[B1,B3,B4];
    else
       a=[A1,A2,A4];b=[B1,B2,B4];
    end
end
 d=ismember(a,c0);e=ismember(b,c0);
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function[r1,r2,B1,B2]=initial(A)
n=length(A);r1=zeros(1,n);r2=zeros(1,n);
for i=1:n
    r1(i)=0;r2(i)=0;
    for j=1:n
        if j==i
            continue
        else
        r1(i)=max(r1(i),A(i,j));
        r2(i)=min(r2(i),A(i,j));
        end
    end
end
B1=zeros(n);B2=zeros(n);
for i=1:n
    B1(i,:)=A(i,:)-r1(i);
    B2(i,:)=A(i,:)-r2(i);
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function[S,Sbar,riS,riSbar,rjS,rjSbar]=parameter(A,k)
n=length(A);r=sum(abs(A'))-diag(abs(A))';
a=[1:n];a(k)=[];S=sets(a,k);n1=length(S);Sbar={};
for i=1:n1
    Sbar=[Sbar {setdiff(a,S{i})}];
end
n2=length(Sbar);riS=zeros(1,n1);riSbar=zeros(1,n1);
for i=1:n1
    riSbar(i)=sum(abs(A(k,Sbar{i})));
    riS(i)=r(k)-sum(abs(A(k,Sbar{i})));
end
rjS=cell(1,n2);
rjSbar=cell(1,n2);
for i=1:n2
    rjS{i}=zeros(1,length(Sbar{i}));
    rjSbar{i}=zeros(1,length(Sbar{i}));
    for p=1:length(Sbar{i})
        rjS{i}(p)=sum(abs(A(Sbar{i}(p),S{i})));
        rjSbar{i}(p)=r(Sbar{i}(p))-rjS{i}(p);
    end
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function [a,b,d,e]=union_tagged_interval_clusters(a1,d1,b1,e1,a2,d2,b2,e2)
for i=1:length(a1);
    if d1(i)==0;
       continue
    else
        for j=1:length(a2)
            if  (d2(j)==0&&a2(j)==a1(i))||(e2(j)==0&&b2(j)==a1(i))
                d1(i)=0;
            else
                continue
            end
        end
    end
end
for i=1:length(a2);
    if d2(i)==0;
       continue
    else
        for j=1:length(a1)
            if  (d1(j)==0&&a1(j)==a2(i))||(e1(j)==0&&b1(j)==a2(i))
                d2(i)=0;
            else
                continue
            end
        end
    end
end
for i=1:length(b1);
    if e1(i)==0;
       continue
    else
        for j=1:length(a2)
            if  (d2(j)==0&&a2(j)==b1(i))||(e2(j)==0&&b2(j)==b1(i))
                e1(i)=0;
            else
                continue
            end
        end
    end
end
for i=1:length(b2);
    if e2(i)==0;
       continue
    else
        for j=1:length(a1)
            if  (d1(j)==0&&a1(j)==b2(i))||(e1(j)==0&&b1(j)==b2(i))
                e2(i)=0;
            else
                continue
            end
        end
    end
end
a=[a1,a2];b=[b1,b2];d=[d1,d2];e=[e1,e2];
[a,d0]=sort(a);b=b(d0);d=d(d0);e=e(d0);
c0=[a(logical(d)),b(logical(e))];
c0=unique(c0);
n=length(a);
for i=2:n
    if d(i)==0
         if a(i)>b(i-1)
            continue
         else
            a(i)=a(i-1);
            b(i-1)=max(b(i-1),b(i));
            b(i)=b(i-1);
         end
    else
         if a(i)>=b(i-1)
            continue
         else
            a(i)=a(i-1);
            b(i-1)=max(b(i-1),b(i));
            b(i)=b(i-1);
        end
    end
end
for i=2:n
    if a(i)==a(i-1)
       c=find(a==a(i));
       d=max(c);
       b(i-1)=b(d);
       b(i)=b(d);
    else
       b(i)=b(i);
    end
end
a=unique(a);b=unique(b);
d=ismember(a,c0);e=ismember(b,c0);
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function[a,b,d,e]=intersection_labeled_interval_clusters(a1,d1,b1,e1,a2,d2,b2,e2)
c0=[a1(logical(d1)),b1(logical(e1)),a2(logical(d2)),b2(logical(e2))];
c0=unique(c0);a1=a1';b1=b1';a2=a2';b2=b2';
s1=[a1,b1];s2=[a2,b2];C=[];
for i=1:length(a1);
    for j=1:length(a2)
    C1=intersection_closed_intervals(s1(i,:),s2(j,:));
    C=[C,C1];
    end
end
n=length(C);a=C(1:2:n);b=C(2:2:n);
[a,b]=union_closed_intervals(a,b);
d1=ismember(a,c0);d2=ismember(b,c0);
A1=[];B1=[];
for i=1:length(d1)
    if a(i)==b(i)&&d1(i)==1
       A1=[A1,a(i)];B1=[B1,b(i)];
    else
       continue
    end
end
   a=setdiff(a,A1);b=setdiff(b,B1);
   d=ismember(a,c0);e=ismember(b,c0);
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function[C]=intersection_closed_open_interval(A,B)
if isempty(A)==1||isempty(B)==1;
    C=[];
else
    if A(1)==A(2)
         if B(1)<A(1)&&A(1)<B(2)
            a=A(1);b=A(2);C=[a,b];
         else
            C=[];
         end
    else
        if max(A(1),B(1))<min(A(2),B(2));
           a=max(A(1),B(1));b=min(A(2),B(2));
           C=[a,b];
        else
           C=[];
        end
    end
end
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function[a,b]=quadraticf(x,y,m,n,p,C0)
u1=min(x,y);
u2=max(x,y);
if x==y
  a1=(-(x+y)+n+m);
  a2=x*y-n*x-m*y+m*n-p;
  delta1=a1^2-4*a2;
  c1=-(x+y)-n-m;
  c2=x*y+n*x+m*y+m*n-p;
  delta3=c1^2-4*c2;
   if delta1<0
       C=[];
   else
       x1=(-a1-sqrt(delta1))/2;
       x2=(-a1+sqrt(delta1))/2;
       x3=min(x1,x2);x4=max(x1,x2);
       C=[x3,x4];C2=[-inf,u1];
       C=intersection_closed_intervals(C,C2);
       C=intersection_closed_open_interval(C,C0);
   end
   if delta3<0
       D=[];
   else
       x1=(-c1-sqrt(delta3))/2;
       x2=(-c1+sqrt(delta3))/2;
       x3=min(x1,x2);x4=max(x1,x2);
       D=[x3,x4];D2=[u1,inf];
       D=intersection_closed_intervals(D,D2);
       D=intersection_closed_open_interval(D,C0);
   end
  A=[C,D];n=length(A);a=[A(1:2:n)];b=[A(2:2:n)];
  [a,b]=union_closed_intervals(a,b);
elseif x>y
  a1=(-(x+y)+n+m);
  a2=x*y-n*x-m*y+m*n-p;
  delta1=a1^2-4*a2;
  b1=(x+y)+n-m;
  b2=-x*y-n*x+m*y+m*n-p;
  delta2=b1^2+4*b2;
  c1=-(x+y)-n-m;
  c2=x*y+n*x+m*y+m*n-p;
  delta3=c1^2-4*c2;
   if delta1<0
       C=[];
   else
       x1=(-a1-sqrt(delta1))/2;
       x2=(-a1+sqrt(delta1))/2;
       x3=min(x1,x2);x4=max(x1,x2);
       C=[x3,x4];C2=[-inf,u1];
       C=intersection_closed_intervals(C,C2);
       C=intersection_closed_open_interval(C,C0);
   end
   if delta3<0
       D=[];
   else
       x1=(-c1-sqrt(delta3))/2;
       x2=(-c1+sqrt(delta3))/2;
       x3=min(x1,x2);x4=max(x1,x2);
       D=[x3,x4];D2=[u2,inf];
       D=intersection_closed_intervals(D,D2);
       D=intersection_closed_open_interval(D,C0);
   end
   if delta2<=0
       E=[u1,u2];
       E=intersection_closed_open_interval(E,C0);
       A=[C,D,E];n=length(A);
       a=[A(1:2:n)];b=[A(2:2:n)];
       [a,b]=union_closed_intervals(a,b);
   else
       x1=(-b1-sqrt(delta2))/(-2);
       x2=(-b1+sqrt(delta2))/(-2);
       x3=min(x1,x2);x4=max(x1,x2);
       E1=[u1,u2];E2=[-inf,x3];
       E2=intersection_closed_intervals(E2,E1);
       E2=intersection_closed_open_interval(E2,C0);
       E3=[x4,inf];
       E3=intersection_closed_intervals(E3,E1);
       E3=intersection_closed_open_interval(E3,C0);
       A=[C,D,E2,E3];n=length(A);
       a=[A(1:2:n)];b=[A(2:2:n)];
       [a,b]=union_closed_intervals(a,b);
    end
else
  a1=(-(x+y)+n+m);
  a2=x*y-n*x-m*y+m*n-p;
  delta1=a1^2-4*a2;
  c1=-(x+y)-n-m;
  c2=x*y+n*x+m*y+m*n-p;
  delta3=c1^2-4*c2;
  d1=(x+y)-n+m;
  d2=-x*y+n*x-m*y+m*n-p;
  delta4=d1^2+4*d2;
   if delta1<0
       C=[];
   else
       x1=(-a1-sqrt(delta1))/2;
       x2=(-a1+sqrt(delta1))/2;
       x3=min(x1,x2);x4=max(x1,x2);
       C=[x3,x4];C2=[-inf,u1];
       C=intersection_closed_intervals(C,C2);
       C=intersection_closed_open_interval(C,C0);
   end
   if delta3<0
       D=[];
   else
       x1=(-c1-sqrt(delta3))/2;
       x2=(-c1+sqrt(delta3))/2;
       x3=min(x1,x2);x4=max(x1,x2);
       D=[x3,x4];D2=[u2,inf];
       D=intersection_closed_intervals(D,D2);
       D=intersection_closed_open_interval(D,C0);
   end
   if delta4<=0
       E=[u1,u2];
       E=intersection_closed_open_interval(E,C0);
       A=[C,D,E];n=length(A);
       a=[A(1:2:n)];b=[A(2:2:n)];
       [a,b]=union_closed_intervals(a,b);
   else
       x1=(-d1-sqrt(delta4))/(-2);
       x2=(-d1+sqrt(delta4))/(-2);
       x3=min(x1,x2);x4=max(x1,x2);
       E1=[u1,u2];E2=[-inf,x3];
       E2=intersection_closed_intervals(E2,E1);
       E2=intersection_closed_open_interval(E2,C0);
       E3=[x4,inf];
       E3=intersection_closed_intervals(E3,E1);
       E3=intersection_closed_open_interval(E3,C0);
       A=[C,D,E2,E3];n=length(A);
       a=[A(1:2:n)];b=[A(2:2:n)];
       [a,b]=union_closed_intervals(a,b);
    end
end
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function[C]=intersection_closed_intervals(A,B)
if isempty(A)==1||isempty(B)==1;
    C=[];
else if max(A(1),B(1))<=min(A(2),B(2));
    a=max(A(1),B(1));
    b=min(A(2),B(2));
    C=[a,b];
    else
    C=[];
    end
end
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function[S]=sets(A,k)
B={};
for i=1:length(A)-1
    z=nchoosek(A,i);
    [n,m]=size(z);
    for j=1:n
        B=[B {z(j,:)}];
    end
end
for i=1:length(B)
    B{i}=[k B{i}];
end
S=[{k},B];
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function[a,b]=union_closed_intervals(a,b)
[a,d]=sort(a);b=b(d);n=length(a);
for i=2:n
    if a(i)>b(i-1)
       continue
    else
       a(i)=a(i-1);
       b(i-1)=max(b(i-1),b(i));
       b(i)=b(i-1);
    end
end
for i=2:n
    if a(i)==a(i-1)
       c=find(a==a(i));
       d=max(c);
       b(i-1)=b(d);
       b(i)=b(d);
    else
       b(i)=b(i);
    end
end
a=unique(a);b=unique(b);
end
